{"version":3,"sources":["../node_modules/reactstrap/es/CardGroup.js","../node_modules/reactstrap/es/CardDeck.js","pages/DashboardPage.js"],"names":["propTypes","tag","utils","className","prop_types_default","a","string","cssModule","object","CardGroup_CardGroup","props","Tag","attributes","Object","objectWithoutPropertiesLoose","classes","classnames_default","react_default","createElement","esm_extends","defaultProps","es_CardGroup","CardDeck_propTypes","CardDeck_CardDeck","es_CardDeck","today","Date","lastWeek","getFullYear","getMonth","getDate","DashboardPage","window","scrollTo","primaryColor","getColor","secondaryColor","Page","title","breadcrumbs","name","active","Row","Col","lg","md","sm","xs","Widget","subtitle","number","color","progress","value","label","es_Card","CardHeader","CardBody","es","data","chartjs","line","options","bar","ListGroup","flush","ListGroupItem","index_esm","size","Badge","style","marginBottom","bgColor","inverse","icon","MdThumbUp","MdRateReview","MdShare","productsData","map","_ref","id","image","description","right","ProductMedia","key","UserProgressTable","headers","usersData","userProgressTableData","getStackLineChart","labels","stackLineChartOptions","position","CardTitle","reverse","react_infinite_calendar_es","selected","minDate","width","theme","accentColor","floatingNav","background","chevron","headerColor","selectionColor","textColor","default","todayColor","weekdayColor","MapWithBubbles","body","overflowX","paddingBottom","height","paddingTop","HorizontalAvatarList","avatars","avatarsData","avatarProps","reversed","Card","header","avatarSize","date","text","buttonProps","children","Button","supportTicketsData","supportTicket","SupportTicket","assign","todos","todosData","React","Component"],"mappings":"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","file":"static/js/27.35eb659d.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardGroup = function CardGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-group'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardGroup.propTypes = propTypes;\nCardGroup.defaultProps = defaultProps;\nexport default CardGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardDeck = function CardDeck(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-deck'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardDeck.propTypes = propTypes;\nCardDeck.defaultProps = defaultProps;\nexport default CardDeck;","import { AnnouncementCard, TodosCard } from 'components/Card';\nimport HorizontalAvatarList from 'components/HorizontalAvatarList';\nimport MapWithBubbles from 'components/MapWithBubbles';\nimport Page from 'components/Page';\nimport ProductMedia from 'components/ProductMedia';\nimport SupportTicket from 'components/SupportTicket';\nimport UserProgressTable from 'components/UserProgressTable';\nimport { IconWidget, NumberWidget } from 'components/Widget';\nimport { getStackLineChart, stackLineChartOptions } from 'demos/chartjs';\nimport {\n  avatarsData,\n  chartjs,\n  productsData,\n  supportTicketsData,\n  todosData,\n  userProgressTableData,\n} from 'demos/dashboardPage';\nimport React from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport {\n  MdBubbleChart,\n  MdInsertChart,\n  MdPersonPin,\n  MdPieChart,\n  MdRateReview,\n  MdShare,\n  MdShowChart,\n  MdThumbUp,\n} from 'react-icons/md';\nimport InfiniteCalendar from 'react-infinite-calendar';\nimport {\n  Badge,\n  Button,\n  Card,\n  CardBody,\n  CardDeck,\n  CardGroup,\n  CardHeader,\n  CardTitle,\n  Col,\n  ListGroup,\n  ListGroupItem,\n  Row,\n} from 'reactstrap';\nimport { getColor } from 'utils/colors';\n\nconst today = new Date();\nconst lastWeek = new Date(\n  today.getFullYear(),\n  today.getMonth(),\n  today.getDate() - 7,\n);\n\nclass DashboardPage extends React.Component {\n  componentDidMount() {\n    // this is needed, because InfiniteCalendar forces window scroll\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    const primaryColor = getColor('primary');\n    const secondaryColor = getColor('secondary');\n\n    return (\n      <Page\n        className=\"DashboardPage\"\n        title=\"Dashboard\"\n        breadcrumbs={[{ name: 'Dashboard', active: true }]}\n      >\n        <Row>\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Total Profit\"\n              subtitle=\"This month\"\n              number=\"9.8k\"\n              color=\"secondary\"\n              progress={{\n                value: 75,\n                label: 'Last month',\n              }}\n            />\n          </Col>\n\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Monthly Visitors\"\n              subtitle=\"This month\"\n              number=\"5,400\"\n              color=\"secondary\"\n              progress={{\n                value: 45,\n                label: 'Last month',\n              }}\n            />\n          </Col>\n\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"New Users\"\n              subtitle=\"This month\"\n              number=\"3,400\"\n              color=\"secondary\"\n              progress={{\n                value: 90,\n                label: 'Last month',\n              }}\n            />\n          </Col>\n\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Bounce Rate\"\n              subtitle=\"This month\"\n              number=\"38%\"\n              color=\"secondary\"\n              progress={{\n                value: 60,\n                label: 'Last month',\n              }}\n            />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg=\"8\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>\n                Total Revenue{' '}\n                <small className=\"text-muted text-capitalize\">This year</small>\n              </CardHeader>\n              <CardBody>\n                <Line data={chartjs.line.data} options={chartjs.line.options} />\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>Total Expense</CardHeader>\n              <CardBody>\n                <Bar data={chartjs.bar.data} options={chartjs.bar.options} />\n              </CardBody>\n              <ListGroup flush>\n                <ListGroupItem>\n                  <MdInsertChart size={25} color={primaryColor} /> Cost of sales{' '}\n                  <Badge color=\"secondary\">$3000</Badge>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <MdBubbleChart size={25} color={primaryColor} /> Management\n                  costs <Badge color=\"secondary\">$1200</Badge>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <MdShowChart size={25} color={primaryColor} /> Financial costs{' '}\n                  <Badge color=\"secondary\">$800</Badge>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <MdPieChart size={25} color={primaryColor} /> Other operating\n                  costs <Badge color=\"secondary\">$2400</Badge>\n                </ListGroupItem>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n\n        <CardGroup style={{ marginBottom: '1rem' }}>\n          <IconWidget\n            bgColor=\"white\"\n            inverse={false}\n            icon={MdThumbUp}\n            title=\"50+ Likes\"\n            subtitle=\"People you like\"\n          />\n          <IconWidget\n            bgColor=\"white\"\n            inverse={false}\n            icon={MdRateReview}\n            title=\"10+ Reviews\"\n            subtitle=\"New Reviews\"\n          />\n          <IconWidget\n            bgColor=\"white\"\n            inverse={false}\n            icon={MdShare}\n            title=\"30+ Shares\"\n            subtitle=\"New Shares\"\n          />\n        </CardGroup>\n\n        <Row>\n          <Col md=\"6\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>New Products</CardHeader>\n              <CardBody>\n                {productsData.map(\n                  ({ id, image, title, description, right }) => (\n                    <ProductMedia\n                      key={id}\n                      image={image}\n                      title={title}\n                      description={description}\n                      right={right}\n                    />\n                  ),\n                )}\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col md=\"6\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>New Users</CardHeader>\n              <CardBody>\n                <UserProgressTable\n                  headers={[\n                    <MdPersonPin size={25} />,\n                    'name',\n                    'date',\n                    'participation',\n                    '%',\n                  ]}\n                  usersData={userProgressTableData}\n                />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg={4} md={4} sm={12} xs={12}>\n            <Card>\n              <Line\n                data={getStackLineChart({\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                  ],\n                  data: [0, 13000, 5000, 24000, 16000, 25000, 10000],\n                })}\n                options={stackLineChartOptions}\n              />\n              <CardBody\n                className=\"text-primary\"\n                style={{ position: 'absolute' }}\n              >\n                <CardTitle>\n                  <MdInsertChart /> Sales\n                </CardTitle>\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col lg={4} md={4} sm={12} xs={12}>\n            <Card>\n              <Line\n                data={getStackLineChart({\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                  ],\n                  data: [10000, 15000, 5000, 10000, 5000, 10000, 10000],\n                })}\n                options={stackLineChartOptions}\n              />\n              <CardBody\n                className=\"text-primary\"\n                style={{ position: 'absolute' }}\n              >\n                <CardTitle>\n                  <MdInsertChart /> Revenue\n                </CardTitle>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg={4} md={4} sm={12} xs={12}>\n            <Card>\n              <Line\n                data={getStackLineChart({\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                  ],\n                  data: [0, 13000, 5000, 24000, 16000, 25000, 10000].reverse(),\n                })}\n                options={stackLineChartOptions}\n              />\n              <CardBody\n                className=\"text-primary\"\n                style={{ position: 'absolute', right: 0 }}\n              >\n                <CardTitle>\n                  <MdInsertChart /> Profit\n                </CardTitle>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <InfiniteCalendar\n              selected={today}\n              minDate={lastWeek}\n              width=\"100%\"\n              theme={{\n                accentColor: primaryColor,\n                floatingNav: {\n                  background: secondaryColor,\n                  chevron: primaryColor,\n                  color: '#FFF',\n                },\n                headerColor: primaryColor,\n                selectionColor: secondaryColor,\n                textColor: {\n                  active: '#FFF',\n                  default: '#333',\n                },\n                todayColor: secondaryColor,\n                weekdayColor: primaryColor,\n              }}\n            />\n          </Col>\n\n          <Col lg=\"8\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card inverse className=\"bg-gradient-primary\">\n              <CardHeader className=\"bg-gradient-primary\">\n                Map with bubbles\n              </CardHeader>\n              <CardBody>\n                <MapWithBubbles />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <CardDeck style={{ marginBottom: '1rem' }}>\n          <Card body style={{ overflowX: 'auto','paddingBottom':'15px','height': 'fit-content','paddingTop': 'inherit'}}>\n            <HorizontalAvatarList\n              avatars={avatarsData}\n              avatarProps={{ size: 50 }}\n            />\n          </Card>\n\n          <Card body style={{ overflowX: 'auto','paddingBottom':'15px','height': 'fit-content','paddingTop': 'inherit'}}>\n            <HorizontalAvatarList\n              avatars={avatarsData}\n              avatarProps={{ size: 50 }}\n              reversed\n            />\n          </Card>\n        </CardDeck>\n\n        <Row>\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <AnnouncementCard\n              color=\"gradient-secondary\"\n              header=\"Announcement\"\n              avatarSize={60}\n              name=\"Jamy\"\n              date=\"1 hour ago\"\n              text=\"Lorem ipsum dolor sit amet,consectetuer edipiscing elit,sed diam nonummy euismod tinciduntut laoreet doloremagna\"\n              buttonProps={{\n                children: 'show',\n              }}\n              style={{ height: 500 }}\n            />\n          </Col>\n\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>\n                <div className=\"d-flex justify-content-between align-items-center\">\n                  <span>Support Tickets</span>\n                  <Button>\n                    <small>View All</small>\n                  </Button>\n                </div>\n              </CardHeader>\n              <CardBody>\n                {supportTicketsData.map(supportTicket => (\n                  <SupportTicket key={supportTicket.id} {...supportTicket} />\n                ))}\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <TodosCard todos={todosData} />\n          </Col>\n        </Row>\n      </Page>\n    );\n  }\n}\nexport default DashboardPage;\n"],"sourceRoot":""}